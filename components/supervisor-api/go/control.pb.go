// Copyright (c) 2020 TypeFox GmbH. All rights reserved.
// Licensed under the GNU Affero General Public License (AGPL).
// See License-AGPL.txt in the project root for license information.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: control.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NewuidmapRequest struct {
	Pid                  int64                       `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Gid                  bool                        `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Mapping              []*NewuidmapRequest_Mapping `protobuf:"bytes,3,rep,name=mapping,proto3" json:"mapping,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *NewuidmapRequest) Reset()         { *m = NewuidmapRequest{} }
func (m *NewuidmapRequest) String() string { return proto.CompactTextString(m) }
func (*NewuidmapRequest) ProtoMessage()    {}
func (*NewuidmapRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{0}
}

func (m *NewuidmapRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewuidmapRequest.Unmarshal(m, b)
}
func (m *NewuidmapRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewuidmapRequest.Marshal(b, m, deterministic)
}
func (m *NewuidmapRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewuidmapRequest.Merge(m, src)
}
func (m *NewuidmapRequest) XXX_Size() int {
	return xxx_messageInfo_NewuidmapRequest.Size(m)
}
func (m *NewuidmapRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewuidmapRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewuidmapRequest proto.InternalMessageInfo

func (m *NewuidmapRequest) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *NewuidmapRequest) GetGid() bool {
	if m != nil {
		return m.Gid
	}
	return false
}

func (m *NewuidmapRequest) GetMapping() []*NewuidmapRequest_Mapping {
	if m != nil {
		return m.Mapping
	}
	return nil
}

type NewuidmapRequest_Mapping struct {
	ContainerId          uint32   `protobuf:"varint,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	HostId               uint32   `protobuf:"varint,2,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	Size                 uint32   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewuidmapRequest_Mapping) Reset()         { *m = NewuidmapRequest_Mapping{} }
func (m *NewuidmapRequest_Mapping) String() string { return proto.CompactTextString(m) }
func (*NewuidmapRequest_Mapping) ProtoMessage()    {}
func (*NewuidmapRequest_Mapping) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{0, 0}
}

func (m *NewuidmapRequest_Mapping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewuidmapRequest_Mapping.Unmarshal(m, b)
}
func (m *NewuidmapRequest_Mapping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewuidmapRequest_Mapping.Marshal(b, m, deterministic)
}
func (m *NewuidmapRequest_Mapping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewuidmapRequest_Mapping.Merge(m, src)
}
func (m *NewuidmapRequest_Mapping) XXX_Size() int {
	return xxx_messageInfo_NewuidmapRequest_Mapping.Size(m)
}
func (m *NewuidmapRequest_Mapping) XXX_DiscardUnknown() {
	xxx_messageInfo_NewuidmapRequest_Mapping.DiscardUnknown(m)
}

var xxx_messageInfo_NewuidmapRequest_Mapping proto.InternalMessageInfo

func (m *NewuidmapRequest_Mapping) GetContainerId() uint32 {
	if m != nil {
		return m.ContainerId
	}
	return 0
}

func (m *NewuidmapRequest_Mapping) GetHostId() uint32 {
	if m != nil {
		return m.HostId
	}
	return 0
}

func (m *NewuidmapRequest_Mapping) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type NewuidmapResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewuidmapResponse) Reset()         { *m = NewuidmapResponse{} }
func (m *NewuidmapResponse) String() string { return proto.CompactTextString(m) }
func (*NewuidmapResponse) ProtoMessage()    {}
func (*NewuidmapResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{1}
}

func (m *NewuidmapResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewuidmapResponse.Unmarshal(m, b)
}
func (m *NewuidmapResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewuidmapResponse.Marshal(b, m, deterministic)
}
func (m *NewuidmapResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewuidmapResponse.Merge(m, src)
}
func (m *NewuidmapResponse) XXX_Size() int {
	return xxx_messageInfo_NewuidmapResponse.Size(m)
}
func (m *NewuidmapResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewuidmapResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewuidmapResponse proto.InternalMessageInfo

type ExposePortRequest struct {
	// local port
	Port uint32 `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	// external port if missing the the same as port
	TargetPort           uint32   `protobuf:"varint,2,opt,name=target_port,json=targetPort,proto3" json:"target_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExposePortRequest) Reset()         { *m = ExposePortRequest{} }
func (m *ExposePortRequest) String() string { return proto.CompactTextString(m) }
func (*ExposePortRequest) ProtoMessage()    {}
func (*ExposePortRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{2}
}

func (m *ExposePortRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExposePortRequest.Unmarshal(m, b)
}
func (m *ExposePortRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExposePortRequest.Marshal(b, m, deterministic)
}
func (m *ExposePortRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExposePortRequest.Merge(m, src)
}
func (m *ExposePortRequest) XXX_Size() int {
	return xxx_messageInfo_ExposePortRequest.Size(m)
}
func (m *ExposePortRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExposePortRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExposePortRequest proto.InternalMessageInfo

func (m *ExposePortRequest) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ExposePortRequest) GetTargetPort() uint32 {
	if m != nil {
		return m.TargetPort
	}
	return 0
}

type ExposePortResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExposePortResponse) Reset()         { *m = ExposePortResponse{} }
func (m *ExposePortResponse) String() string { return proto.CompactTextString(m) }
func (*ExposePortResponse) ProtoMessage()    {}
func (*ExposePortResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{3}
}

func (m *ExposePortResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExposePortResponse.Unmarshal(m, b)
}
func (m *ExposePortResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExposePortResponse.Marshal(b, m, deterministic)
}
func (m *ExposePortResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExposePortResponse.Merge(m, src)
}
func (m *ExposePortResponse) XXX_Size() int {
	return xxx_messageInfo_ExposePortResponse.Size(m)
}
func (m *ExposePortResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExposePortResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExposePortResponse proto.InternalMessageInfo

func (m *ExposePortResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*NewuidmapRequest)(nil), "supervisor.NewuidmapRequest")
	proto.RegisterType((*NewuidmapRequest_Mapping)(nil), "supervisor.NewuidmapRequest.Mapping")
	proto.RegisterType((*NewuidmapResponse)(nil), "supervisor.NewuidmapResponse")
	proto.RegisterType((*ExposePortRequest)(nil), "supervisor.ExposePortRequest")
	proto.RegisterType((*ExposePortResponse)(nil), "supervisor.ExposePortResponse")
}

func init() {
	proto.RegisterFile("control.proto", fileDescriptor_0c5120591600887d)
}

var fileDescriptor_0c5120591600887d = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x4d, 0x4b, 0x03, 0x31,
	0x10, 0x75, 0x4d, 0x3f, 0xec, 0xd4, 0x4a, 0x3b, 0x0a, 0x2e, 0xc5, 0x8f, 0xba, 0x78, 0x28, 0x1e,
	0xf6, 0x50, 0xef, 0x1e, 0x14, 0xc1, 0x0a, 0x15, 0x89, 0x27, 0xbd, 0x94, 0xb5, 0x1b, 0x6a, 0xc0,
	0x6e, 0x62, 0x92, 0x55, 0xf1, 0x2f, 0xf9, 0x6b, 0xfc, 0x47, 0x92, 0x64, 0xb7, 0xad, 0x4a, 0xbd,
	0xbd, 0xbc, 0x99, 0x79, 0xef, 0xcd, 0x10, 0x68, 0x4d, 0x44, 0x66, 0x94, 0x78, 0x8e, 0xa5, 0x12,
	0x46, 0x20, 0xe8, 0x5c, 0x32, 0xf5, 0xca, 0xb5, 0x50, 0xd1, 0x57, 0x00, 0xed, 0x1b, 0xf6, 0x96,
	0xf3, 0x74, 0x96, 0x48, 0xca, 0x5e, 0x72, 0xa6, 0x0d, 0xb6, 0x81, 0x48, 0x9e, 0x86, 0x41, 0x2f,
	0xe8, 0x13, 0x6a, 0xa1, 0x65, 0xa6, 0x3c, 0x0d, 0xd7, 0x7b, 0x41, 0x7f, 0x83, 0x5a, 0x88, 0x67,
	0x50, 0x9f, 0x25, 0x52, 0xf2, 0x6c, 0x1a, 0x92, 0x1e, 0xe9, 0x37, 0x07, 0xc7, 0xf1, 0x42, 0x36,
	0xfe, 0x2d, 0x19, 0x8f, 0x7c, 0x2f, 0x2d, 0x87, 0xba, 0xf7, 0x50, 0x2f, 0x38, 0x3c, 0x82, 0x4d,
	0x1b, 0x30, 0xe1, 0x19, 0x53, 0xe3, 0xc2, 0xb7, 0x45, 0x9b, 0x73, 0x6e, 0x98, 0xe2, 0x2e, 0xd4,
	0x9f, 0x84, 0x36, 0xe3, 0x22, 0x43, 0x8b, 0xd6, 0xec, 0x73, 0x98, 0x22, 0x42, 0x45, 0xf3, 0x0f,
	0x16, 0x12, 0xc7, 0x3a, 0x1c, 0x6d, 0x43, 0x67, 0xc9, 0x5f, 0x4b, 0x91, 0x69, 0x16, 0x5d, 0x41,
	0xe7, 0xf2, 0x5d, 0x0a, 0xcd, 0x6e, 0x85, 0x32, 0xe5, 0xa2, 0x08, 0x15, 0x29, 0x94, 0x29, 0x1c,
	0x1d, 0xc6, 0x43, 0x68, 0x9a, 0x44, 0x4d, 0x99, 0x19, 0xbb, 0x92, 0xb7, 0x03, 0x4f, 0xd9, 0xd9,
	0xe8, 0x04, 0x70, 0x59, 0xc9, 0xeb, 0xe3, 0x0e, 0x54, 0x99, 0x52, 0x42, 0x39, 0xad, 0x06, 0xf5,
	0x8f, 0xc1, 0x67, 0x00, 0x5b, 0x17, 0xfe, 0xf8, 0x77, 0xf6, 0x36, 0x13, 0x86, 0xd7, 0xd0, 0x98,
	0xa7, 0xc3, 0xbd, 0xff, 0x8e, 0xd6, 0xdd, 0x5f, 0x51, 0x2d, 0x56, 0x5a, 0xc3, 0x11, 0xc0, 0x22,
	0x0a, 0xfe, 0x68, 0xff, 0xb3, 0x6c, 0xf7, 0x60, 0x55, 0xb9, 0x94, 0x3b, 0xaf, 0x3e, 0x90, 0x44,
	0xf2, 0xc7, 0x9a, 0xfb, 0x26, 0xa7, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x4d, 0x74, 0x8e, 0xb2,
	0x37, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ControlServiceClient is the client API for ControlService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControlServiceClient interface {
	// Newuidmap sets sthe UID/GID map of a user namespace
	Newuidmap(ctx context.Context, in *NewuidmapRequest, opts ...grpc.CallOption) (*NewuidmapResponse, error)
	// ExposePort exposes a port
	ExposePort(ctx context.Context, in *ExposePortRequest, opts ...grpc.CallOption) (*ExposePortResponse, error)
}

type controlServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewControlServiceClient(cc grpc.ClientConnInterface) ControlServiceClient {
	return &controlServiceClient{cc}
}

func (c *controlServiceClient) Newuidmap(ctx context.Context, in *NewuidmapRequest, opts ...grpc.CallOption) (*NewuidmapResponse, error) {
	out := new(NewuidmapResponse)
	err := c.cc.Invoke(ctx, "/supervisor.ControlService/Newuidmap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlServiceClient) ExposePort(ctx context.Context, in *ExposePortRequest, opts ...grpc.CallOption) (*ExposePortResponse, error) {
	out := new(ExposePortResponse)
	err := c.cc.Invoke(ctx, "/supervisor.ControlService/ExposePort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControlServiceServer is the server API for ControlService service.
type ControlServiceServer interface {
	// Newuidmap sets sthe UID/GID map of a user namespace
	Newuidmap(context.Context, *NewuidmapRequest) (*NewuidmapResponse, error)
	// ExposePort exposes a port
	ExposePort(context.Context, *ExposePortRequest) (*ExposePortResponse, error)
}

// UnimplementedControlServiceServer can be embedded to have forward compatible implementations.
type UnimplementedControlServiceServer struct {
}

func (*UnimplementedControlServiceServer) Newuidmap(ctx context.Context, req *NewuidmapRequest) (*NewuidmapResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Newuidmap not implemented")
}
func (*UnimplementedControlServiceServer) ExposePort(ctx context.Context, req *ExposePortRequest) (*ExposePortResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExposePort not implemented")
}

func RegisterControlServiceServer(s *grpc.Server, srv ControlServiceServer) {
	s.RegisterService(&_ControlService_serviceDesc, srv)
}

func _ControlService_Newuidmap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewuidmapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServiceServer).Newuidmap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supervisor.ControlService/Newuidmap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServiceServer).Newuidmap(ctx, req.(*NewuidmapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ControlService_ExposePort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExposePortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServiceServer).ExposePort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supervisor.ControlService/ExposePort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServiceServer).ExposePort(ctx, req.(*ExposePortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ControlService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "supervisor.ControlService",
	HandlerType: (*ControlServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Newuidmap",
			Handler:    _ControlService_Newuidmap_Handler,
		},
		{
			MethodName: "ExposePort",
			Handler:    _ControlService_ExposePort_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "control.proto",
}
